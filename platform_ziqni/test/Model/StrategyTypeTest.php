<?php
/**
 * StrategyTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ZIQNI Admin API
 *
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.9
 * Contact: support@ziqni.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * StrategyTypeTest Class Doc Comment
 *
 * @category    Class
 * @description The scoring strategy type. SUMMARY: * \&quot;TotalCumulative\&quot;: The basic strategy where all the points sum up and are shown in the Leaderboard. Depending on the Rules, all the points are Cumulative. * \&quot;SumBest\&quot;: This strategy requires a value to indicate how many highest points will be calculated and shown on the leaderboard * \&quot;LimitedTo\&quot;: This strategy requires a value to indicate how many events will be summed up and shown in the leaderboard. * \&quot;FirstTo\&quot;: This strategy requires a value to indicate how many points have to be received to complete the mission.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class StrategyTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "StrategyType"
     */
    public function testStrategyType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
